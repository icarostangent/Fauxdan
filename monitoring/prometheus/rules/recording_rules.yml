groups:
  - name: fauxdan-recording-rules
    rules:
      - record: job:up
        expr: up
      
      - record: job:up:rate
        expr: rate(up[5m])
      
      - record: django:http_requests:rate
        expr: rate(django_http_requests_total[5m])
      
      - record: django:http_request_duration:p95
        expr: histogram_quantile(0.95, rate(django_http_request_duration_seconds_bucket[5m]))
      
      - record: django:http_request_duration:p99
        expr: histogram_quantile(0.99, rate(django_http_request_duration_seconds_bucket[5m]))
      
      - record: django:error_rate
        expr: rate(django_http_requests_total{status=~"5.."}[5m]) / rate(django_http_requests_total[5m]) * 100
      
      # PostgreSQL recording rules
      - record: postgresql:connections_utilization_percent
        expr: (pg_stat_database_numbackends / 100) * 100
      
      - record: postgresql:transactions_per_second
        expr: rate(pg_stat_database_xact_commit[5m]) + rate(pg_stat_database_xact_rollback[5m])
      
      - record: postgresql:dml_operations_per_second
        expr: rate(pg_stat_database_tup_inserted[5m]) + rate(pg_stat_database_tup_updated[5m]) + rate(pg_stat_database_tup_deleted[5m])
      
      - record: postgresql:tuples_per_second
        expr: rate(pg_stat_database_tup_fetched[5m]) + rate(pg_stat_database_tup_returned[5m])
      
      - record: postgresql:database_size_gb
        expr: pg_database_size_bytes / 1024 / 1024 / 1024
      
      - record: postgresql:io_time_seconds
        expr: (pg_stat_database_blk_read_time + pg_stat_database_blk_write_time) / 1000
